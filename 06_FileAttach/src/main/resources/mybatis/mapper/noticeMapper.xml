<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mybatis.mapper.noticeMapper">

  <select id="getNotices" resultType="NoticeDTO">
    SELECT n.nid, n.title, n.content, COUNT(a.aid) AS attach_count
      FROM tbl_notice AS n LEFT OUTER JOIN tbl_attach AS a
        ON n.nid = a.nid
     GROUP BY n.nid, n.title, n.content
     ORDER BY nid DESC
     LIMIT 0, 20;
  </select>
  
  <select id="getNoticeById" parameterType="java.lang.Integer" resultType="NoticeDTO">
    SELECT nid, title, content
      FROM tbl_notice
     WHERE nid = #{nid}
  </select>
  
  <select id="getAttaches" parameterType="java.lang.Integer" resultType="AttachDTO">
     SELECT aid, nid, file_path, original_filename, filesystem_name
       FROM tbl_attach
      WHERE nid = #{nid}
  </select>
  
  <!-- 
    tbl_notice 테이블의 PK(nid)가 MySQL에서 AUTO_INCREMENT인 경우,
    useGeneratedKeys="true" keyProperty="nid"> 옵션을 주면,
    파라미터로 전달된 NoticeDTO 객체의 nid 필드에 DB에 생성된 PK 값이 자동으로 저장 된다.
   -->
   <insert id="insertNotice" parameterType="NoticeDTO"
           useGeneratedKeys="true"
           keyProperty="nid">
    INSERT INTO tbl_notice (title, content)
    VALUES (#{title}, #{content})
  </insert>
  
  <insert id="insertAttach" parameterType="AttachDTO">
    INSERT INTO tbl_attach (nid, file_path, original_filename, filesystem_name)
    VALUES (#{nid}, #{filePath}, #{originalFilename}, #{filesystemName})
  </insert>
  
  <delete id="deleteNoticeById" parameterType="java.lang.Integer">
    DELETE
      FROM tbl_notice
     WHERE nid = #{nid}
  </delete>

  <select id="getAttachById" parameterType="java.lang.Integer" resultType="AttachDTO">
    SELECT aid, nid, file_path, original_filename, filesystem_name
      FROM tbl_attach
     WHERE aid = #{aid}
  </select>

</mapper>
